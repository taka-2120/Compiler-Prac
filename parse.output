Terminals which are not used

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_EQ
   lex_SEMICOLON
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK


Grammar

    0 $accept: program $end

    1 program: expression

    2 expression: expression2
    3           | expression lex_LT expression2
    4           | expression lex_GT expression2
    5           | expression lex_LE expression2
    6           | expression lex_GE expression2
    7           | expression lex_EQEQ expression2
    8           | expression lex_NE expression2

    9 expression2: expression3
   10            | lex_PLUS expression3
   11            | lex_MINUS expression3
   12            | expression2 lex_PLUS expression3
   13            | expression2 lex_MINUS expression3

   14 expression3: expression4
   15            | expression3 lex_STAR expression4
   16            | expression3 lex_SLASH expression4
   17            | expression3 lex_PERCENT expression4

   18 expression4: lex_INT
   19            | lex_CHAR
   20            | exp_variable
   21            | lex_LPAREN expression lex_RPAREN
   22            | exp_function

   23 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

   24 explist: /* empty */
   25        | expression
   26        | explist lex_COMMA expression

   27 exp_variable: lex_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 10 12
lex_MINUS (265) 11 13
lex_STAR (266) 15
lex_SLASH (267) 16
lex_PERCENT (268) 17
lex_AND (269)
lex_EQ (270)
lex_EQEQ (271) 7
lex_NE (272) 8
lex_LT (273) 3
lex_GT (274) 4
lex_LE (275) 5
lex_GE (276) 6
lex_COMMA (277) 26
lex_SEMICOLON (278)
lex_LPAREN (279) 21 23
lex_RPAREN (280) 21 23
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 18
lex_CHAR (286) 19
lex_ID (287) 23 27


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression (35)
    on left: 2 3 4 5 6 7 8, on right: 1 3 4 5 6 7 8 21 25 26
expression2 (36)
    on left: 9 10 11 12 13, on right: 2 3 4 5 6 7 8 12 13
expression3 (37)
    on left: 14 15 16 17, on right: 9 10 11 12 13 15 16 17
expression4 (38)
    on left: 18 19 20 21 22, on right: 14 15 16 17
exp_function (39)
    on left: 23, on right: 22
explist (40)
    on left: 24 25 26, on right: 23 26
exp_variable (41)
    on left: 27, on right: 20


state 0

    0 $accept: . program $end

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    program       go to state 7
    expression    go to state 8
    expression2   go to state 9
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 1

   10 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression3   go to state 14
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 2

   11 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression3   go to state 15
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 3

   21 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression    go to state 16
    expression2   go to state 9
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 4

   18 expression4: lex_INT .

    $default  reduce using rule 18 (expression4)


state 5

   19 expression4: lex_CHAR .

    $default  reduce using rule 19 (expression4)


state 6

   23 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN
   27 exp_variable: lex_ID .

    lex_LPAREN  shift, and go to state 17

    $default  reduce using rule 27 (exp_variable)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 18


state 8

    1 program: expression .
    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 19
    lex_NE    shift, and go to state 20
    lex_LT    shift, and go to state 21
    lex_GT    shift, and go to state 22
    lex_LE    shift, and go to state 23
    lex_GE    shift, and go to state 24

    $default  reduce using rule 1 (program)


state 9

    2 expression: expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 2 (expression)


state 10

    9 expression2: expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 27
    lex_SLASH    shift, and go to state 28
    lex_PERCENT  shift, and go to state 29

    $default  reduce using rule 9 (expression2)


state 11

   14 expression3: expression4 .

    $default  reduce using rule 14 (expression3)


state 12

   22 expression4: exp_function .

    $default  reduce using rule 22 (expression4)


state 13

   20 expression4: exp_variable .

    $default  reduce using rule 20 (expression4)


state 14

   10 expression2: lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 27
    lex_SLASH    shift, and go to state 28
    lex_PERCENT  shift, and go to state 29

    $default  reduce using rule 10 (expression2)


state 15

   11 expression2: lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 27
    lex_SLASH    shift, and go to state 28
    lex_PERCENT  shift, and go to state 29

    $default  reduce using rule 11 (expression2)


state 16

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   21 expression4: lex_LPAREN expression . lex_RPAREN

    lex_EQEQ    shift, and go to state 19
    lex_NE      shift, and go to state 20
    lex_LT      shift, and go to state 21
    lex_GT      shift, and go to state 22
    lex_LE      shift, and go to state 23
    lex_GE      shift, and go to state 24
    lex_RPAREN  shift, and go to state 30


state 17

   23 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    $default  reduce using rule 24 (explist)

    expression    go to state 31
    expression2   go to state 9
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    explist       go to state 32
    exp_variable  go to state 13


state 18

    0 $accept: program $end .

    $default  accept


state 19

    7 expression: expression lex_EQEQ . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 33
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 20

    8 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 34
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 21

    3 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 35
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 22

    4 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 36
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 23

    5 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 37
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 24

    6 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression2   go to state 38
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 25

   12 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression3   go to state 39
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 26

   13 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression3   go to state 40
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 27

   15 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 41
    exp_function  go to state 12
    exp_variable  go to state 13


state 28

   16 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 42
    exp_function  go to state 12
    exp_variable  go to state 13


state 29

   17 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 43
    exp_function  go to state 12
    exp_variable  go to state 13


state 30

   21 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 21 (expression4)


state 31

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   25 explist: expression .

    lex_EQEQ  shift, and go to state 19
    lex_NE    shift, and go to state 20
    lex_LT    shift, and go to state 21
    lex_GT    shift, and go to state 22
    lex_LE    shift, and go to state 23
    lex_GE    shift, and go to state 24

    $default  reduce using rule 25 (explist)


state 32

   23 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   26 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 44
    lex_RPAREN  shift, and go to state 45


state 33

    7 expression: expression lex_EQEQ expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 7 (expression)


state 34

    8 expression: expression lex_NE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 8 (expression)


state 35

    3 expression: expression lex_LT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 3 (expression)


state 36

    4 expression: expression lex_GT expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 4 (expression)


state 37

    5 expression: expression lex_LE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 5 (expression)


state 38

    6 expression: expression lex_GE expression2 .
   12 expression2: expression2 . lex_PLUS expression3
   13            | expression2 . lex_MINUS expression3

    lex_PLUS   shift, and go to state 25
    lex_MINUS  shift, and go to state 26

    $default  reduce using rule 6 (expression)


state 39

   12 expression2: expression2 lex_PLUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 27
    lex_SLASH    shift, and go to state 28
    lex_PERCENT  shift, and go to state 29

    $default  reduce using rule 12 (expression2)


state 40

   13 expression2: expression2 lex_MINUS expression3 .
   15 expression3: expression3 . lex_STAR expression4
   16            | expression3 . lex_SLASH expression4
   17            | expression3 . lex_PERCENT expression4

    lex_STAR     shift, and go to state 27
    lex_SLASH    shift, and go to state 28
    lex_PERCENT  shift, and go to state 29

    $default  reduce using rule 13 (expression2)


state 41

   15 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 15 (expression3)


state 42

   16 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 16 (expression3)


state 43

   17 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 17 (expression3)


state 44

   26 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression    go to state 46
    expression2   go to state 9
    expression3   go to state 10
    expression4   go to state 11
    exp_function  go to state 12
    exp_variable  go to state 13


state 45

   23 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 23 (exp_function)


state 46

    3 expression: expression . lex_LT expression2
    4           | expression . lex_GT expression2
    5           | expression . lex_LE expression2
    6           | expression . lex_GE expression2
    7           | expression . lex_EQEQ expression2
    8           | expression . lex_NE expression2
   26 explist: explist lex_COMMA expression .

    lex_EQEQ  shift, and go to state 19
    lex_NE    shift, and go to state 20
    lex_LT    shift, and go to state 21
    lex_GT    shift, and go to state 22
    lex_LE    shift, and go to state 23
    lex_GE    shift, and go to state 24

    $default  reduce using rule 26 (explist)
